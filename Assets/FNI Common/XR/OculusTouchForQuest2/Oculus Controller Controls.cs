//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/FNI Common/XR/OculusTouchForQuest2/Oculus Controller Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace FNI.XR
{
    public partial class @OculusControllerControls : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @OculusControllerControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""Oculus Controller Controls"",
    ""maps"": [
        {
            ""name"": ""Oculus Left Controller"",
            ""id"": ""e09de72b-6f94-41b3-ad71-42aff011f8fd"",
            ""actions"": [
                {
                    ""name"": ""Primary Button"",
                    ""type"": ""Button"",
                    ""id"": ""22bfcfe9-f7c2-48a0-be20-909b7aaf00ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary Button"",
                    ""type"": ""Button"",
                    ""id"": ""c65dd816-e53a-4fef-b9db-217be67b63f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu Button"",
                    ""type"": ""Button"",
                    ""id"": ""6400fa34-db96-482b-b771-384ffa8eab78"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Value"",
                    ""id"": ""175f5f46-69b2-4014-ad32-b8f61856b560"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Value"",
                    ""id"": ""ea96cd0b-25dd-497b-8f4d-30c91f6620f3"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Thumbstick"",
                    ""type"": ""Value"",
                    ""id"": ""c679b3a8-93c9-476c-8402-b3d3ff88f9ae"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9a2e8424-1d2d-4c72-b34d-e989fa9ff73f"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""207eae82-e66e-4254-878e-3969a2f336c0"",
                    ""path"": ""<XRController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e189173a-5387-4b28-836c-360ab44f53e3"",
                    ""path"": ""<XRController>{LeftHand}/menuButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44fddeb1-7d16-4236-8770-0d79021a946d"",
                    ""path"": ""<XRController>{LeftHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfc72cf1-cbd5-40c8-956a-c4d77c0b6a81"",
                    ""path"": ""<XRController>{LeftHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""716c5dea-37f5-43f7-bdd9-c0f5db1ab7fd"",
                    ""path"": ""<XRController>{LeftHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thumbstick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Oculus Right Controller"",
            ""id"": ""9130ed0d-4050-4564-95cd-a814ffe35788"",
            ""actions"": [
                {
                    ""name"": ""Primary Button"",
                    ""type"": ""Button"",
                    ""id"": ""fbc767cb-8aed-4fa9-80ef-f00f04f53408"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary Button"",
                    ""type"": ""Button"",
                    ""id"": ""75f5b923-0272-4d01-b280-2b0eb655791e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu Button"",
                    ""type"": ""Button"",
                    ""id"": ""69e4531f-c89b-4d26-90dd-33f8684c6372"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Value"",
                    ""id"": ""d7623a7c-37cd-4de7-a236-995292f73975"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Value"",
                    ""id"": ""3bdd946b-ff40-4c7a-b10e-bbe41db13c13"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Thumbstick"",
                    ""type"": ""Value"",
                    ""id"": ""5840eda8-8791-48a5-b242-7b206f51ff53"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""247944cd-1758-453e-9878-8cd05542b139"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9ed53ce-38df-4516-976d-3247f5c3756c"",
                    ""path"": ""<XRController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""829881f5-2c92-4499-954d-1bc06303b116"",
                    ""path"": ""<XRController>{RightHand}/menuButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""759d032d-3814-4cb6-ba50-57f9a18a66a3"",
                    ""path"": ""<XRController>{RightHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4566c0a-414d-462b-a576-c582fc1c73a4"",
                    ""path"": ""<XRController>{RightHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7a0c04f-7d4f-47a5-81e7-70f32730dd79"",
                    ""path"": ""<XRController>{RightHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thumbstick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Oculus Left Controller
            m_OculusLeftController = asset.FindActionMap("Oculus Left Controller", throwIfNotFound: true);
            m_OculusLeftController_PrimaryButton = m_OculusLeftController.FindAction("Primary Button", throwIfNotFound: true);
            m_OculusLeftController_SecondaryButton = m_OculusLeftController.FindAction("Secondary Button", throwIfNotFound: true);
            m_OculusLeftController_MenuButton = m_OculusLeftController.FindAction("Menu Button", throwIfNotFound: true);
            m_OculusLeftController_Trigger = m_OculusLeftController.FindAction("Trigger", throwIfNotFound: true);
            m_OculusLeftController_Grip = m_OculusLeftController.FindAction("Grip", throwIfNotFound: true);
            m_OculusLeftController_Thumbstick = m_OculusLeftController.FindAction("Thumbstick", throwIfNotFound: true);
            // Oculus Right Controller
            m_OculusRightController = asset.FindActionMap("Oculus Right Controller", throwIfNotFound: true);
            m_OculusRightController_PrimaryButton = m_OculusRightController.FindAction("Primary Button", throwIfNotFound: true);
            m_OculusRightController_SecondaryButton = m_OculusRightController.FindAction("Secondary Button", throwIfNotFound: true);
            m_OculusRightController_MenuButton = m_OculusRightController.FindAction("Menu Button", throwIfNotFound: true);
            m_OculusRightController_Trigger = m_OculusRightController.FindAction("Trigger", throwIfNotFound: true);
            m_OculusRightController_Grip = m_OculusRightController.FindAction("Grip", throwIfNotFound: true);
            m_OculusRightController_Thumbstick = m_OculusRightController.FindAction("Thumbstick", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Oculus Left Controller
        private readonly InputActionMap m_OculusLeftController;
        private IOculusLeftControllerActions m_OculusLeftControllerActionsCallbackInterface;
        private readonly InputAction m_OculusLeftController_PrimaryButton;
        private readonly InputAction m_OculusLeftController_SecondaryButton;
        private readonly InputAction m_OculusLeftController_MenuButton;
        private readonly InputAction m_OculusLeftController_Trigger;
        private readonly InputAction m_OculusLeftController_Grip;
        private readonly InputAction m_OculusLeftController_Thumbstick;
        public struct OculusLeftControllerActions
        {
            private @OculusControllerControls m_Wrapper;
            public OculusLeftControllerActions(@OculusControllerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @PrimaryButton => m_Wrapper.m_OculusLeftController_PrimaryButton;
            public InputAction @SecondaryButton => m_Wrapper.m_OculusLeftController_SecondaryButton;
            public InputAction @MenuButton => m_Wrapper.m_OculusLeftController_MenuButton;
            public InputAction @Trigger => m_Wrapper.m_OculusLeftController_Trigger;
            public InputAction @Grip => m_Wrapper.m_OculusLeftController_Grip;
            public InputAction @Thumbstick => m_Wrapper.m_OculusLeftController_Thumbstick;
            public InputActionMap Get() { return m_Wrapper.m_OculusLeftController; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(OculusLeftControllerActions set) { return set.Get(); }
            public void SetCallbacks(IOculusLeftControllerActions instance)
            {
                if (m_Wrapper.m_OculusLeftControllerActionsCallbackInterface != null)
                {
                    @PrimaryButton.started -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnPrimaryButton;
                    @PrimaryButton.performed -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnPrimaryButton;
                    @PrimaryButton.canceled -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnPrimaryButton;
                    @SecondaryButton.started -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnSecondaryButton;
                    @SecondaryButton.performed -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnSecondaryButton;
                    @SecondaryButton.canceled -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnSecondaryButton;
                    @MenuButton.started -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnMenuButton;
                    @MenuButton.performed -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnMenuButton;
                    @MenuButton.canceled -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnMenuButton;
                    @Trigger.started -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnTrigger;
                    @Trigger.performed -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnTrigger;
                    @Trigger.canceled -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnTrigger;
                    @Grip.started -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnGrip;
                    @Grip.performed -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnGrip;
                    @Grip.canceled -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnGrip;
                    @Thumbstick.started -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnThumbstick;
                    @Thumbstick.performed -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnThumbstick;
                    @Thumbstick.canceled -= m_Wrapper.m_OculusLeftControllerActionsCallbackInterface.OnThumbstick;
                }
                m_Wrapper.m_OculusLeftControllerActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @PrimaryButton.started += instance.OnPrimaryButton;
                    @PrimaryButton.performed += instance.OnPrimaryButton;
                    @PrimaryButton.canceled += instance.OnPrimaryButton;
                    @SecondaryButton.started += instance.OnSecondaryButton;
                    @SecondaryButton.performed += instance.OnSecondaryButton;
                    @SecondaryButton.canceled += instance.OnSecondaryButton;
                    @MenuButton.started += instance.OnMenuButton;
                    @MenuButton.performed += instance.OnMenuButton;
                    @MenuButton.canceled += instance.OnMenuButton;
                    @Trigger.started += instance.OnTrigger;
                    @Trigger.performed += instance.OnTrigger;
                    @Trigger.canceled += instance.OnTrigger;
                    @Grip.started += instance.OnGrip;
                    @Grip.performed += instance.OnGrip;
                    @Grip.canceled += instance.OnGrip;
                    @Thumbstick.started += instance.OnThumbstick;
                    @Thumbstick.performed += instance.OnThumbstick;
                    @Thumbstick.canceled += instance.OnThumbstick;
                }
            }
        }
        public OculusLeftControllerActions @OculusLeftController => new OculusLeftControllerActions(this);

        // Oculus Right Controller
        private readonly InputActionMap m_OculusRightController;
        private IOculusRightControllerActions m_OculusRightControllerActionsCallbackInterface;
        private readonly InputAction m_OculusRightController_PrimaryButton;
        private readonly InputAction m_OculusRightController_SecondaryButton;
        private readonly InputAction m_OculusRightController_MenuButton;
        private readonly InputAction m_OculusRightController_Trigger;
        private readonly InputAction m_OculusRightController_Grip;
        private readonly InputAction m_OculusRightController_Thumbstick;
        public struct OculusRightControllerActions
        {
            private @OculusControllerControls m_Wrapper;
            public OculusRightControllerActions(@OculusControllerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @PrimaryButton => m_Wrapper.m_OculusRightController_PrimaryButton;
            public InputAction @SecondaryButton => m_Wrapper.m_OculusRightController_SecondaryButton;
            public InputAction @MenuButton => m_Wrapper.m_OculusRightController_MenuButton;
            public InputAction @Trigger => m_Wrapper.m_OculusRightController_Trigger;
            public InputAction @Grip => m_Wrapper.m_OculusRightController_Grip;
            public InputAction @Thumbstick => m_Wrapper.m_OculusRightController_Thumbstick;
            public InputActionMap Get() { return m_Wrapper.m_OculusRightController; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(OculusRightControllerActions set) { return set.Get(); }
            public void SetCallbacks(IOculusRightControllerActions instance)
            {
                if (m_Wrapper.m_OculusRightControllerActionsCallbackInterface != null)
                {
                    @PrimaryButton.started -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnPrimaryButton;
                    @PrimaryButton.performed -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnPrimaryButton;
                    @PrimaryButton.canceled -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnPrimaryButton;
                    @SecondaryButton.started -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnSecondaryButton;
                    @SecondaryButton.performed -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnSecondaryButton;
                    @SecondaryButton.canceled -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnSecondaryButton;
                    @MenuButton.started -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnMenuButton;
                    @MenuButton.performed -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnMenuButton;
                    @MenuButton.canceled -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnMenuButton;
                    @Trigger.started -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnTrigger;
                    @Trigger.performed -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnTrigger;
                    @Trigger.canceled -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnTrigger;
                    @Grip.started -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnGrip;
                    @Grip.performed -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnGrip;
                    @Grip.canceled -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnGrip;
                    @Thumbstick.started -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnThumbstick;
                    @Thumbstick.performed -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnThumbstick;
                    @Thumbstick.canceled -= m_Wrapper.m_OculusRightControllerActionsCallbackInterface.OnThumbstick;
                }
                m_Wrapper.m_OculusRightControllerActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @PrimaryButton.started += instance.OnPrimaryButton;
                    @PrimaryButton.performed += instance.OnPrimaryButton;
                    @PrimaryButton.canceled += instance.OnPrimaryButton;
                    @SecondaryButton.started += instance.OnSecondaryButton;
                    @SecondaryButton.performed += instance.OnSecondaryButton;
                    @SecondaryButton.canceled += instance.OnSecondaryButton;
                    @MenuButton.started += instance.OnMenuButton;
                    @MenuButton.performed += instance.OnMenuButton;
                    @MenuButton.canceled += instance.OnMenuButton;
                    @Trigger.started += instance.OnTrigger;
                    @Trigger.performed += instance.OnTrigger;
                    @Trigger.canceled += instance.OnTrigger;
                    @Grip.started += instance.OnGrip;
                    @Grip.performed += instance.OnGrip;
                    @Grip.canceled += instance.OnGrip;
                    @Thumbstick.started += instance.OnThumbstick;
                    @Thumbstick.performed += instance.OnThumbstick;
                    @Thumbstick.canceled += instance.OnThumbstick;
                }
            }
        }
        public OculusRightControllerActions @OculusRightController => new OculusRightControllerActions(this);
        public interface IOculusLeftControllerActions
        {
            void OnPrimaryButton(InputAction.CallbackContext context);
            void OnSecondaryButton(InputAction.CallbackContext context);
            void OnMenuButton(InputAction.CallbackContext context);
            void OnTrigger(InputAction.CallbackContext context);
            void OnGrip(InputAction.CallbackContext context);
            void OnThumbstick(InputAction.CallbackContext context);
        }
        public interface IOculusRightControllerActions
        {
            void OnPrimaryButton(InputAction.CallbackContext context);
            void OnSecondaryButton(InputAction.CallbackContext context);
            void OnMenuButton(InputAction.CallbackContext context);
            void OnTrigger(InputAction.CallbackContext context);
            void OnGrip(InputAction.CallbackContext context);
            void OnThumbstick(InputAction.CallbackContext context);
        }
    }
}
